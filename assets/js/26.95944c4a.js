(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{411:function(v,_,t){"use strict";t.r(_);var s=t(54),a=Object(s.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h4",{attrs:{id:"一、进程与线程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、进程与线程"}},[v._v("#")]),v._v(" 一、进程与线程")]),v._v(" "),t("p",[t("strong",[v._v("先来一些大致概念")]),v._v("：")]),v._v(" "),t("ul",[t("li",[v._v("一个进程由一个或多个线程组成")]),v._v(" "),t("li",[v._v("windows电脑的任务管理器里看到的是进程列表")])]),v._v(" "),t("p",[t("strong",[v._v("再来一个比喻")]),v._v("：")]),v._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[v._v("- 进程是一个工厂，工厂有它的独立资源\n\n- 工厂之间相互独立\n\n- 线程是工厂中的工人，多个工人协作完成任务\n\n- 工厂内有一个或多个工人\n\n- 工人之间共享空间\n")])])]),t("p",[t("strong",[v._v("再完善概念")]),v._v("：")]),v._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[v._v("- 工厂的资源 -> 系统分配的内存（独立的一块内存）\n\n- 工厂之间的相互独立 -> 进程之间相互独立\n\n- 多个工人协作完成任务 -> 多个线程在进程中协作完成任务\n\n- 工厂内有一个或多个工人 -> 一个进程由一个或多个线程组成\n\n- 工人之间共享空间 -> 同一进程下的各个线程之间共享程序的内存空间（包括代码段、数据集、堆等\n")])])]),t("p",[t("strong",[v._v("官方话术")]),v._v("：")]),v._v(" "),t("ul",[t("li",[v._v("进程是cpu资源分配的最小单位（是能拥有资源和独立运行的最小单位）")]),v._v(" "),t("li",[v._v("线程是cpu调度的最小单位（线程是建立在进程的基础上的一次程序运行单位，一个进程中可以有多个线程）")])]),v._v(" "),t("p",[t("strong",[v._v("补充")]),v._v("：")]),v._v(" "),t("ul",[t("li",[v._v("不同进程之间也可以通信，不过代价较大")]),v._v(" "),t("li",[v._v("现在，一般通用的叫法：单线程与多线程，都是指在一个进程内的单和多。（所以核心还是得属于一个进程才行）")])]),v._v(" "),t("h4",{attrs:{id:"二、浏览器是多进程的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、浏览器是多进程的"}},[v._v("#")]),v._v(" 二、浏览器是多进程的")]),v._v(" "),t("p",[t("strong",[v._v("具体包含哪些进程")]),v._v("：（仅列举主要进程）")]),v._v(" "),t("ol",[t("li",[t("p",[v._v("Browser进程：浏览器的主进程（负责协调、主控），只有一个。作用有：")]),v._v(" "),t("ul",[t("li",[v._v("负责浏览器界面显示，与用户交互。如前进，后退等")]),v._v(" "),t("li",[v._v("负责各个页面的管理，创建和销毁其他进程")]),v._v(" "),t("li",[v._v("将Renderer进程的得到的内存中的Bitmap，绘制到用户界面上")]),v._v(" "),t("li",[v._v("网络资源的管理，下载等")])])]),v._v(" "),t("li",[t("p",[v._v("第三方插件进程：每种类型的插件对应一个进程，仅当使用该插件时才创建")])]),v._v(" "),t("li",[t("p",[v._v("GPU进程：最多一个，用户3D绘制等")])]),v._v(" "),t("li",[t("p",[v._v("浏览器渲染进程（浏览器内核）（Renderer进程，内部是多线程的）：默认每个标签页面是一个进程，互不影响。主要作用为：")]),v._v(" "),t("ul",[t("li",[v._v("页面渲染，脚本执行，事件处理。")])])])]),v._v(" "),t("p",[t("strong",[v._v("强化记忆")]),v._v("：")]),v._v(" "),t("p",[v._v("在浏览器中打开一个网页相当于新起了一个进程（进程内有自己的多线程）")]),v._v(" "),t("p",[v._v("浏览器有时会将多个进程合并（空白标签页有时被合并）")]),v._v(" "),t("h4",{attrs:{id:"三、浏览器多进程的优势"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、浏览器多进程的优势"}},[v._v("#")]),v._v(" 三、浏览器多进程的优势")]),v._v(" "),t("p",[t("strong",[v._v("简单点理解")]),v._v("：如果浏览器是单进程，那么某个Tab页崩溃了，就影响了整个浏览器，体验有多差；同理如果是单进程，插件崩溃了也会影响整个浏览器；而且多进程还有其它的诸多优势。。。")]),v._v(" "),t("p",[t("strong",[v._v("无法避免的坏处")]),v._v("：内存等资源消耗会更大，有点空间换时间的意思")]),v._v(" "),t("h4",{attrs:{id:"四、浏览器内核-渲染进程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、浏览器内核-渲染进程"}},[v._v("#")]),v._v(" 四、浏览器内核（渲染进程）")]),v._v(" "),t("p",[v._v("对于普通的前端操作来说，最终要的就是渲染进程；")]),v._v(" "),t("p",[v._v("页面的渲染，JS的执行，事件的循环，都在这个进程内进行。")]),v._v(" "),t("p",[v._v("渲染进程是多"),t("strong",[v._v("线程")]),v._v("的，包含以下线程：")]),v._v(" "),t("ol",[t("li",[t("strong",[v._v("GUI渲染线程")]),v._v("：\n"),t("ul",[t("li",[v._v("负责渲染浏览器界面，解析HTML，CSS，构建DOM树和RenderObject树，布局和绘制等。")]),v._v(" "),t("li",[v._v("当界面需要重绘（Repaint）或由于某种操作引发回流(reflow)时，该线程就会执行")]),v._v(" "),t("li",[v._v("注意，"),t("strong",[v._v("GUI渲染线程与JS引擎线程是互斥的")]),v._v("，当JS引擎执行时GUI线程会被挂起（相当于被冻结了），GUI更新会被保存在一个队列中等到JS引擎空闲时立即被执行。")])])]),v._v(" "),t("li",[t("strong",[v._v("Js引擎线程")]),v._v(" "),t("ul",[t("li",[v._v("也称为JS内核，负责处理Javascript脚本程序。（例如V8引擎）")]),v._v(" "),t("li",[v._v("JS引擎线程负责解析Javascript脚本，运行代码。")]),v._v(" "),t("li",[v._v("JS引擎一直等待着任务队列中任务的到来，然后加以处理，一个Tab页（renderer进程）中无论什么时候都只有一个JS线程在运行JS程序")]),v._v(" "),t("li",[v._v("同样注意，"),t("strong",[v._v("GUI渲染线程与JS引擎线程是互斥的")]),v._v("，所以如果JS执行的时间过长，这样就会造成页面的渲染不连贯，导致页面渲染加载阻塞。")])])]),v._v(" "),t("li",[t("strong",[v._v("事件触发线程")]),v._v(" "),t("ul",[t("li",[v._v("归属于浏览器而不是JS引擎，用来控制事件循环（可以理解，JS引擎自己都忙不过来，需要浏览器另开线程协助）")]),v._v(" "),t("li",[v._v("当JS引擎执行代码块如setTimeOut时（也可来自浏览器内核的其他线程,如鼠标点击、AJAX异步请求等），会将对应任务添加到事件线程中")]),v._v(" "),t("li",[v._v("当对应的事件符合触发条件被触发时，该线程会把事件添加到待处理队列的队尾，等待JS引擎的处理")]),v._v(" "),t("li",[v._v("注意，由于JS的单线程关系，所以这些待处理队列中的事件都得排队等待JS引擎处理（当JS引擎空闲时才会去执行）")])])]),v._v(" "),t("li",[t("strong",[v._v("定时触发器线程")]),v._v(" "),t("ul",[t("li",[v._v("传说中的setInterval与setTimeout所在线程")]),v._v(" "),t("li",[v._v("浏览器定时计数器并不是由JavaScript引擎计数的,（因为JavaScript引擎是单线程的, 如果处于阻塞线程状态就会影响记计时的准确）")]),v._v(" "),t("li",[v._v("因此通过单独线程来计时并触发定时（计时完毕后，添加到事件队列中，等待JS引擎空闲后执行）")]),v._v(" "),t("li",[v._v("注意，W3C在HTML标准中规定，规定要求setTimeout中低于4ms的时间间隔算为4ms。")])])]),v._v(" "),t("li",[t("strong",[v._v("异步http请求线程")]),v._v(" "),t("ul",[t("li",[v._v("在XMLHttpRequest在连接后是通过浏览器新开一个线程请求")]),v._v(" "),t("li",[v._v("将检测到状态变更时，如果设置有回调函数，异步线程就产生状态变更事件，将这个回调再放入事件队列中。再由JavaScript引擎执行。")])])])]),v._v(" "),t("h4",{attrs:{id:"五、堆和栈"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#五、堆和栈"}},[v._v("#")]),v._v(" 五、堆和栈")]),v._v(" "),t("p",[t("strong",[v._v("堆heap")]),v._v("： 队列优先,先进先出")]),v._v(" "),t("p",[t("strong",[v._v("栈stack")]),v._v("： 先进后出")])])}),[],!1,null,null,null);_.default=a.exports}}]);